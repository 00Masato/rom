name: ci

on:
  push:
    paths:
      - .github/workflows/custom_ci.yml
      - "**/*.rb"
      - Gemfile
      - "*.gemspec"
      - ".rubocop.yml"
  pull_request:
    branches:
      - master

jobs:
  tests-mri:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby: ["2.6.x", "2.5.x", "2.4.x"]
        runtime_deps:
          - "rom-sql-latest"
          - "rom-sql-master"
          - "dry-transformer-latest"
          - "dry-transformer-master"
        include:
          - ruby: "2.6.x"
            coverage: "true"
          - runtime_deps: "rom-sql-latest"
            use_rom_sql_master: "false"
          - runtime_deps: "rom-sql-master"
            use_rom_sql_master: "true"
          - runtime_deps: "dry-transformer-latest"
            use_dry_transformer_master: "false"
          - runtime_deps: "dry-transformer-master"
            use_dry_transformer_master: "true"
    steps:
      - uses: actions/checkout@v1
      - name: Install dependencies
        run: sudo apt-get install -y --no-install-recommends libpq-dev libsqlite3-dev
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: "11"
          postgresql db: rom_repository
          postgresql user: runner
      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{matrix.ruby}}
      - name: Install bundler
        run: gem install bundler
      - name: Bundle
        env:
          USE_DRY_TRANSFORMER_MASTER: ${{matrix.use_dry_transformer_master}}
          USE_ROM_SQL_MASTER: ${{matrix.use_rom_sql_master}}
        run: bin/bundle
      - name: Run all tests
        env:
          USE_DRY_TRANSFORMER_MASTER: ${{matrix.use_dry_transformer_master}}
          USE_ROM_SQL_MASTER: ${{matrix.use_rom_sql_master}}
          COVERAGE: ${{matrix.coverage}}
          CODACY_RUN_LOCAL: ${{matrix.coverage}}
          CODACY_PROJECT_TOKEN: ${{secrets.CODACY_PROJECT_TOKEN}}
          BUNDLE_GEMFILE: ${{matrix.gemfile}}
          BASE_DB_URI: localhost/rom_repository
        run: bundle exec rake spec
      - name: Send coverage results
        if: "matrix.coverage == 'true'"
        env:
          CODACY_PROJECT_TOKEN: ${{secrets.CODACY_PROJECT_TOKEN}}
        run: codacy_final_reporter

  tests-others:
    runs-on: ubuntu-latest
    container:
      image: ${{matrix.image}}
    strategy:
      fail-fast: false
      matrix:
        image: ["jruby:9.2.9", "ruby:2.7"]
        include:
          - image: "jruby:9.2.9"
            fail_on_warnings: "false"
            use_rom_sql_master: "false"
          - image: "ruby:2.7"
            fail_on_warnings: "true"
            use_rom_sql_master: "true"

    services:
      postgres_db:
        image: postgres:10.8
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: ""
          POSTGRES_DB: rom_repository
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v1
      - name: Install bundler
        run: gem install bundler
      - name: Bundle
        run: bin/bundle
        env:
          USE_ROM_SQL_MASTER: ${{matrix.use_rom_sql_master}}
      - name: Run all tests
        run: bundle exec rake spec
        env:
          BASE_DB_URI: postgres_db/rom_repository
          FAIL_ON_WARNINGS: ${{matrix.fail_on_warnings}}
          USE_ROM_SQL_MASTER: ${{matrix.use_rom_sql_master}}
